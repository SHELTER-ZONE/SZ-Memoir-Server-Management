(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{362:function(t,r,e){"use strict";e.r(r);var a=e(43),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"管理員控管"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理員控管"}},[t._v("#")]),t._v(" 管理員控管")]),t._v(" "),e("p",[t._v("如果你的Server不是專制管理形式，而是分權管理，那就一定會存在一些不同職責的管理員。"),e("br"),t._v("\n這邊不談管理員實際在 Discord 中所擁有的身分組權限，而是談論你真正賦予給管理員的職責。")]),t._v(" "),e("p",[t._v("擁有管理員自然能幫群主分攤一些管理壓力，但我想大家都知道，水能載舟亦能覆舟，從小到大一定聽過各種宮廷、公司、組織的權力鬥爭的故事，也多多少少實際看過別人的群組因此而瓦解或炎上。")]),t._v(" "),e("p",[t._v("關根結底問題當然還是在"),e("code",[t._v("階級")]),t._v("與"),e("code",[t._v("權力")]),t._v("上。\n最怕的永遠是管理員擁有過於龐大的權力，進而衍伸出很多問題，就不列舉了。")]),t._v(" "),e("p",[t._v("因此如何有效的控管管理員的權限與職責分配，使其能有效地協助 Server 的管理，又不會造成後患成了群主的一大困難課題之一。")]),t._v(" "),e("h2",{attrs:{id:"管理員招募-委任"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理員招募-委任"}},[t._v("#")]),t._v(" 管理員招募/委任")]),t._v(" "),e("h2",{attrs:{id:"權力與職責分配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#權力與職責分配"}},[t._v("#")]),t._v(" 權力與職責分配")]),t._v(" "),e("h3",{attrs:{id:"職責單一化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#職責單一化"}},[t._v("#")]),t._v(" 職責單一化")]),t._v(" "),e("p",[t._v("這靈感是來自程式設計Design Pattern中的 "),e("code",[t._v("SOLID原則")]),t._v(" (Single responsibility principle)，完全是將同樣的概念進行一個實際應用。"),e("br"),t._v("\n顧名思義，就是「一個管理員就只負責管理一件事」，這直接限縮了權力範圍，同時可以降管理員的負擔外，也能方便管理；且發生問題時，也會比較單一容易處理。"),e("br"),t._v('\n但這邊要注意的是"單一"的尺度，例如：')]),t._v(" "),e("blockquote",[e("p",[t._v("管理員A專門負責管理身分組")])]),t._v(" "),e("p",[t._v("這表上面看起來是單一負責管理身分組這一件事，但身分組也是一個集合，所以實際上他管理的尺度橫跨了所有不同類別的身分組，這裡並沒有說這樣不對，只是你要衡量一下這個尺度，還是說尺度應該控制在單一類別身分組管理，這就是你自己需要去衡量的。")])])}),[],!1,null,null,null);r.default=v.exports}}]);